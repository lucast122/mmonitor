name: Build MMonitor for Multiple Platforms

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-linux-22:
    name: Build MMonitor on Ubuntu 22.04
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 python3-pip build-essential zlib1g-dev libbz2-dev liblzma-dev libncurses5-dev
          pip install pyinstaller

      - name: Build Flye
        run: |
          git clone https://github.com/fenderglass/Flye.git
          cd Flye
          python3 setup.py build
          python3 setup.py install --user

      - name: Build Samtools
        run: |
          git clone https://github.com/samtools/htslib.git
          cd htslib
          autoheader && autoconf && ./configure && make && sudo make install
          git clone https://github.com/samtools/samtools.git
          cd samtools
          ./configure && make && sudo make install

      - name: Build Centrifuge
        run: |
          git clone https://github.com/DaehwanKimLab/centrifuge.git
          cd centrifuge
          make

      - name: Build MMonitor
        run: |
          cd desktop/src/mmonitor
          pyinstaller --onefile __main__.py --distpath ../../output

      - name: Upload MMonitor binary
        uses: actions/upload-artifact@v4
        with:
          name: mmonitor-binary-ubuntu22
          path: desktop/output/

  build-linux-20:
    name: Build MMonitor on Ubuntu 20.04
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 python3-pip build-essential zlib1g-dev libbz2-dev liblzma-dev libncurses5-dev
          pip install pyinstaller

      - name: Build Flye
        run: |
          git clone https://github.com/fenderglass/Flye.git
          cd Flye
          python3 setup.py build
          python3 setup.py install --user

      - name: Build Samtools
        run: |
          git clone https://github.com/samtools/htslib.git
          cd htslib
          autoheader && autoconf && ./configure && make && sudo make install
          git clone https://github.com/samtools/samtools.git
          cd samtools
          ./configure && make && sudo make install

      - name: Build Centrifuge
        run: |
          git clone https://github.com/DaehwanKimLab/centrifuge.git
          cd centrifuge
          make

      - name: Build MMonitor
        run: |
          cd desktop/src/mmonitor
          pyinstaller --onefile __main__.py --distpath ../../output

      - name: Upload MMonitor binary
        uses: actions/upload-artifact@v4
        with:
          name: mmonitor-binary-ubuntu20
          path: desktop/output/

  build-debian:
    name: Build MMonitor on Debian
    runs-on: ubuntu-latest  # Using Ubuntu runner, but compatible for Debian build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 python3-pip build-essential zlib1g-dev libbz2-dev liblzma-dev libncurses5-dev
          pip install pyinstaller

      - name: Build Flye
        run: |
          git clone https://github.com/fenderglass/Flye.git
          cd Flye
          python3 setup.py build
          python3 setup.py install --user

      - name: Build Samtools
        run: |
          git clone https://github.com/samtools/htslib.git
          cd htslib
          autoheader && autoconf && ./configure && make && sudo make install
          git clone https://github.com/samtools/samtools.git
          cd samtools
          ./configure && make && sudo make install

      - name: Build Centrifuge
        run: |
          git clone https://github.com/DaehwanKimLab/centrifuge.git
          cd centrifuge
          make

      - name: Build MMonitor
        run: |
          cd desktop/src/mmonitor
          pyinstaller --onefile __main__.py --distpath ../../output

      - name: Upload MMonitor binary
        uses: actions/upload-artifact@v4
        with:
          name: mmonitor-binary-debian
          path: desktop/output/

  build-centos:
    name: Build MMonitor on CentOS 7
    runs-on: ubuntu-latest  # Using Ubuntu runner, but running CentOS inside Docker
    container:
      image: centos:7
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          yum update -y
          yum install -y python3 python3-pip gcc make zlib-devel bzip2-devel xz-devel ncurses-devel
          pip3 install pyinstaller

      - name: Build Flye
        run: |
          git clone https://github.com/fenderglass/Flye.git
          cd Flye
          python3 setup.py build
          python3 setup.py install --user

      - name: Build Samtools
        run: |
          git clone https://github.com/samtools/htslib.git
          cd htslib
          autoheader && autoconf && ./configure && make && sudo make install
          git clone https://github.com/samtools/samtools.git
          cd samtools
          ./configure && make && sudo make install

      - name: Build Centrifuge
        run: |
          git clone https://github.com/DaehwanKimLab/centrifuge.git
          cd centrifuge
          make

      - name: Build MMonitor
        run: |
          cd desktop/src/mmonitor
          pyinstaller --onefile __main__.py --distpath ../../output

      - name: Upload MMonitor binary
        uses: actions/upload-artifact@v4
        with:
          name: mmonitor-binary-centos
          path: desktop/output/

  build-macos:
    name: Build MMonitor on macOS
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          brew install python3
          pip3 install setuptools
          pip3 install pyinstaller

      - name: Build Flye
        run: |
          git clone https://github.com/fenderglass/Flye.git
          cd Flye
          python3 setup.py build
          python3 setup.py install --user

      - name: Build Samtools
        run: |
          git clone https://github.com/samtools/htslib.git
          cd htslib
          autoheader && autoconf && ./configure && make && sudo make install
          git clone https://github.com/samtools/samtools.git
          cd samtools
          ./configure && make && sudo make install

      - name: Build Centrifuge
        run: |
          git clone https://github.com/DaehwanKimLab/centrifuge.git
          cd centrifuge
          make

      - name: Build MMonitor
        run: |
          cd desktop/src/mmonitor
          pyinstaller --onefile __main__.py --distpath ../../output

      - name: Upload MMonitor binary
        uses: actions/upload-artifact@v4
        with:
          name: mmonitor-binary-macos
          path: desktop/output/

  build-windows-docker:
    name: Build Docker Image for Windows
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Docker
        run: |
          choco install docker-desktop

      - name: Create Dockerfile
        run: |
          echo 'FROM ubuntu:latest' > Dockerfile
          echo 'COPY . /app' >> Dockerfile
          echo 'WORKDIR /app' >> Dockerfile
          echo 'RUN apt-get update && apt-get install -y python3 python3-pip' >> Dockerfile
          echo 'RUN pip3 install pyinstaller' >> Dockerfile
          echo 'RUN apt-get install -y build-essential' >> Dockerfile
          echo 'RUN apt-get install -y git zlib1g-dev libbz2-dev liblz
