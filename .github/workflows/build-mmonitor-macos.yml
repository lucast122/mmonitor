name: MMonitor pipeline complete build macOS

on:
  push:
    branches:
      - workflows
  pull_request:
    branches:
      - workflows
  workflow_dispatch:

jobs:
  build-flye:
    name: Build Flye from Source on macOS
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Python and create virtual environment
        run: |
          python3 -m venv venv
          source venv/bin/activate
          python3 -m pip install --upgrade pip setuptools

      - name: Build Flye
        run: |
          source venv/bin/activate
          git clone https://github.com/fenderglass/Flye.git desktop/lib/Flye
          cd desktop/lib/Flye
          python3 setup.py build
          python3 setup.py install --user
      - name: Upload Flye binaries
        uses: actions/upload-artifact@v4
        with:
          name: flye-binaries
          path: ~/.local/bin/flye

  build-samtools:
    name: Build Samtools from Source on macOS
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install required tools
        run: |
          brew install autoconf automake libtool

      - name: Build HTSlib
        run: |
          git clone --recursive https://github.com/samtools/htslib.git
          cd htslib
          git submodule update --init --recursive
          autoheader
          autoconf
          autoreconf -i
          ./configure
          make
          sudo make install
      - name: Build Samtools
        run: |
          git clone https://github.com/samtools/samtools.git
          cd samtools
          autoreconf -i
          ./configure
          make
          sudo make install
      - name: Upload Samtools binaries
        uses: actions/upload-artifact@v4
        with:
          name: samtools-binaries
          path: /usr/local/bin/samtools

  build-centrifuger:
    name: Build Centrifuger from Source on macOS
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
  
      - name: Install dependencies
        run: |
          brew install gcc
  
      - name: Clone Centrifuger
        run: git clone https://github.com/mourisl/centrifuger.git
  
      - name: Build Centrifuger
        run: |
          cd centrifuger
          make

      - name: Upload Centrifuger binaries
        uses: actions/upload-artifact@v4
        with:
          name: centrifuger-binaries
          path: centrifuger/centrifuger

  build-keggcharter:
    name: Build KEGGCharter from Source on macOS
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      
      - name: Build KEGGCharter
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git clone https://${GITHUB_TOKEN}@github.com/telatin/KEGGCharter.git
          cd KEGGCharter
          cargo build --release
      
      - name: Upload KEGGCharter binary
        uses: actions/upload-artifact@v4
        with:
          name: keggcharter-binary
          path: KEGGCharter/target/release/keggcharter

  build-bakta:
    name: Build Bakta from Source on macOS
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'  # Explicitly use Python 3.10
      
      - name: Build Bakta
        run: |
          git clone https://github.com/oschwengers/bakta.git
          cd bakta
          pip install .
      
      - name: Upload Bakta files
        uses: actions/upload-artifact@v4
        with:
          name: bakta-files
          path: /Users/runner/Library/Python/3.10/bin/bakta*

  build-emu:
    name: Build EMU 16S Profiler from Source on macOS
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'  # Explicitly use Python 3.10
      
      - name: Build EMU
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git clone https://${{ secrets.GITHUB_TOKEN }}@github.com/EBI-Metagenomics/emu.git
          cd emu
          pip install .
      
      - name: Upload EMU files
        uses: actions/upload-artifact@v4
        with:
          name: emu-files
          path: /Users/runner/Library/Python/3.10/bin/emu*

  build-medaka:
    name: Build Medaka from Source on macOS
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'  # Use Python 3.10 for compatibility
      
      - name: Build Medaka
        run: |
          git clone https://github.com/nanoporetech/medaka.git
          cd medaka
          pip install .
      
      - name: Upload Medaka files
        uses: actions/upload-artifact@v4
        with:
          name: medaka-files
          path: /Users/runner/Library/Python/3.10/bin/medaka*

  build-metabat2:
    name: Build MetaBAT2 from Source on macOS
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install dependencies
        run: |
          brew install cmake boost
      
      - name: Build MetaBAT2
        run: |
          git clone https://bitbucket.org/berkeleylab/metabat.git
          cd metabat
          mkdir build && cd build
          cmake -DBOOST_ROOT=$(brew --prefix boost) ..
          make
      
      - name: Upload MetaBAT2 binary
        uses: actions/upload-artifact@v4
        with:
          name: metabat2-binary
          path: metabat/build/bin/metabat2

  build-mmonitor-pyinstaller:
    name: Build MMonitor with PyInstaller on macOS
    runs-on: macos-latest
    needs: [build-flye, build-samtools, build-centrifuger, build-keggcharter, build-bakta, build-emu, build-medaka, build-metabat2]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Create and activate virtual environment
        run: |
          python3 -m venv venv
          source venv/bin/activate

      - name: Install Python dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install PyInstaller
        run: pip install pyinstaller

      - name: Set PYTHONPATH
        run: |
          export PYTHONPATH=$PYTHONPATH:$GITHUB_WORKSPACE/desktop:$GITHUB_WORKSPACE/desktop/src:$GITHUB_WORKSPACE/desktop/src/mmonitor

      - name: Build MMonitor
        run: |
          cd desktop/src/mmonitor
          pyinstaller --onefile __main__.py --distpath ../../output
          ls -lah

      - name: Upload MMonitor binary
        uses: actions/upload-artifact@v4
        with:
          name: mmonitor-binary-macos
          path: desktop/output/